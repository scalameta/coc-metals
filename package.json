{
  "name": "coc-metals",
  "version": "0.7.4",
  "description": "coc.nvim extension for Metals, the Scala language server",
  "keywords": [
    "scala",
    "lsp",
    "language server",
    "scalameta",
    "coc.nvim"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/scalameta/coc-metals"
  },
  "contributors": [
    {
      "name": "ckipp01 <ckipp@pm.me>",
      "url": "https://github.com/ckipp01"
    },
    {
      "name": "Gabriele Petronella",
      "url": "https://github.com/gabro"
    }
  ],
  "bugs": "https://github.com/scalameta/coc-metals/issues",
  "license": "Apache-2.0",
  "engines": {
    "coc": ">=0.0.66"
  },
  "main": "lib/index.js",
  "scripts": {
    "clean": "rimraf lib",
    "build": "tsc --noEmit && parcel build src/index.ts --out-dir lib/ --target node --no-source-maps",
    "format": "prettier --write **/*.ts",
    "format-check": "prettier --check **/*.ts",
    "prepare": "npx npm-run-all clean build",
    "watch": "parcel serve src/index.ts --out-dir lib/ --target node"
  },
  "activationEvents": [
    "onLanguage:scala",
    "workspaceContains:build.sbt",
    "workspaceContains:build.sc",
    "workspaceContains:build.gradle",
    "workspaceContains:pom.xml",
    "workspaceContains:project/build.properties",
    "workspaceContains:**/scala/**"
  ],
  "contributes": {
    "rootPatterns": [
      {
        "filetype": "scala",
        "patterns": [
          "build.sbt",
          "build.sc",
          "build.gradle",
          "pom.xml"
        ]
      }
    ],
    "configurationDefaults": {
      "[scala]": {
        "editor.suggestSelection": "first"
      }
    },
    "configuration": {
      "title": "Metals",
      "properties": {
        "metals.serverVersion": {
          "type": "string",
          "default": "0.8.3",
          "markdownDescription": "The version of the Metals server artifact. Requires reloading the window.\n\n**Change only if you know what you're doing**"
        },
        "metals.serverProperties": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Optional list of properties to pass along to the Metals server. By default, the environment variable `JAVA_OPTS` and `.jvmopts` file are respected. \n\nExample: `-Dhttps.proxyHost=… -Dhttps.proxyPort=…` or `-Dmetals.statistics=all`"
        },
        "metals.javaHome": {
          "type": "string",
          "markdownDescription": "Optional path to the Java home directory. Requires reloading the window.\n\nDefaults to the most recent Java 8 version computed by the `locate-java-home` npm package."
        },
        "metals.sbtScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to an `sbt` executable to use for running `sbt bloopInstall`.\n\nBy default, Metals uses `java -jar sbt-launch.jar` with an embedded launcher while respecting `.jvmopts` and `.sbtopts`.\n\nUpdate this setting if your `sbt` script requires more customizations like using environment variables."
        },
        "metals.millScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to a `mill` executable to use for running `mill mill.contrib.Bloop/install`.\n\nBy default, Metals uses an embedded `millw` script while respecting `.mill-version` file.\n\nUpdate this setting if your `mill` script requires more customizations."
        },
        "metals.mavenScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to a `mvn` executable to use for running `mvn ch.epfl.scala:maven-bloop_2.10:<bloop_version>:bloopInstall`.\n\nBy default, Metals uses an embedded `mvnw` script.\n\nUpdate this setting if your `mvn` script requires more customizations."
        },
        "metals.gradleScript": {
          "type": "string",
          "markdownDescription": "Optional absolute path to a `gradle` executable to use for running `gradle bloopInstall`.\n\nBy default, Metals uses an embedded `gradlew` ukcript.\n\nUpdate this setting if your `gradle` script requires more customizations."
        },
        "metals.pantsTargets": {
          "type": "string",
          "markdownDescription": "The pants targets to export.\n\nSpace separated list of Pants targets to export, for example `src/main/scala:: src/main/java::`. Syntax such as `src/{main,test}::` is not supported."
        },
        "metals.scalafmtConfigPath": {
          "type": "string",
          "markdownDescription": "Optional custom path to the .scalafmt.conf file.\n\nShould be relative to the workspace root directory and use forward slashes `/` for file separators (even on Windows)."
        },
        "metals.bloopVersion": {
          "type": "string",
          "markdownDescription": "This version will be used for the Bloop build tool plugin, for any supported build tool, while importing in Metals as well as for running the embedded server"
        },
        "metals.bloopSbtAlreadyInstalled": {
          "type": "boolean",
          "markdownDescription": "If true, Metals will not generate a `project/metals.sbt` file under the assumption that sbt-bloop is already manually installed in the sbt build. Build import will fail with a 'not valid command bloopInstall' error in case Bloop is not manually installed in the build when using this option."
        },
        "metals.customRepositories": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "markdownDescription": "Optional list of custom resolvers passed to Coursier when fetching metals dependencies.\n\nFor documentation on accepted values see the [Coursier documentation](https://get-coursier.io/docs/other-repositories).\n\nThe extension will pass these to Coursier using the COURSIER_REPOSITORIES environment variable after joining the custom repositories with a pipe character (|)."
        },
        "metals.statusBarEnabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Turn on usage of the statusBar integration.\n\nNote: You need to ensure you are adding something like `%{coc#status()}` in order to display it, or use a plugin with status integration."
        },
        "metals.superMethodLensesEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable goto super method code lens"
        },
        "metals.treeviews.initialWidth": {
          "type": "number",
          "default": 40,
          "description": "Initial TreeViews panel width"
        },
        "metals.treeviews.alignment": {
          "type": "string",
          "default": "left",
          "enum": [
            "left",
            "right"
          ],
          "description": "TreeViews panel position"
        },
        "metals.treeviews.initialViews": {
          "type": "object",
          "default": [
            {
              "name": "metalsCompile",
              "size": 10,
              "expanded": [
                [
                  "metals://ongoing-compilations"
                ]
              ]
            },
            {
              "name": "metalsBuild",
              "size": 40,
              "expanded": [
                [
                  "projects:"
                ]
              ]
            }
          ]
        },
        "metals.treeviews.toggleNode": {
          "type": "string",
          "default": "<CR>",
          "description": "Expand/Collapse tree node"
        },
        "metals.treeviews.forceChildrenReload": {
          "type": "string",
          "default": "f",
          "description": "Force the reloading of the children of this node. May be useful when the wrong result is cached and tree contains invalid data."
        },
        "metals.treeviews.gotoParentNode": {
          "type": "string",
          "default": "p",
          "description": "Go to parent node"
        },
        "metals.treeviews.gotoFirstChild": {
          "type": "string",
          "default": "K",
          "description": "Go to first child"
        },
        "metals.treeviews.gotoLastChild": {
          "type": "string",
          "default": "J",
          "description": "Go to last child"
        },
        "metals.treeviews.gotoPrevSibling": {
          "type": "string",
          "default": "<C-k>",
          "description": "Go to prev sibling"
        },
        "metals.treeviews.gotoNextSibling": {
          "type": "string",
          "default": "<C-j>",
          "description": "Go to next sibling"
        },
        "metals.treeviews.executeCommand": {
          "type": "string",
          "default": "r",
          "description": "Execute command for node"
        },
        "metals.treeviews.executeCommandAndOpenSplit": {
          "type": "string",
          "default": "s",
          "description": "Execute command and open node under cursor in horizontal split (if node is class, trait and so on)"
        },
        "metals.treeviews.executeCommandAndOpenVSplit": {
          "type": "string",
          "default": "v",
          "description": "Execute command and open node under cursor in vertical split (if node is class, trait and so on)"
        },
        "metals.treeviews.executeCommandAndOpenTab": {
          "type": "string",
          "default": "t",
          "description": "Execute command and open node under cursor in tab (if node is class, trait and so on)"
        }
      }
    },
    "commands": [
      {
        "command": "metals.restartServer",
        "category": "Metals",
        "title": "Restart server"
      },
      {
        "command": "metals.build-import",
        "category": "Metals",
        "title": "Import build"
      },
      {
        "command": "metals.build-connect",
        "category": "Metals",
        "title": "Connect to build server"
      },
      {
        "command": "metals.build-restart",
        "category": "Metals",
        "title": "Restart Bloop server"
      },
      {
        "command": "metals.sources-scan",
        "category": "Metals",
        "title": "Rescan sources"
      },
      {
        "command": "metals.compile-cascade",
        "category": "Metals",
        "title": "Cascade compile"
      },
      {
        "command": "metals.compile-cancel",
        "category": "Metals",
        "title": "Cancel compilation"
      },
      {
        "command": "metals.doctor-run",
        "category": "metals",
        "title": "run doctor"
      },
      {
        "command": "metals.logs-toggle",
        "category": "metals",
        "title": "Toggle Logs"
      },
      {
        "command": "metals.tvp",
        "category": "metals",
        "title": "Show TreeView panel"
      },
      {
        "command": "metals.tvp.view",
        "category": "metals",
        "title": "Execute different operations with Tree Views"
      },
      {
        "command": "metals.revealInTreeView",
        "category": "metals",
        "title": "Reveal current class, trait or object in Tree View"
      },
      {
        "command": "metals.new-scala-file",
        "category": "Metals",
        "title": "Create a new Scala file"
      }
    ]
  },
  "devDependencies": {
    "@types/node": "13.11.0",
    "npm-run-all": "4.1.5",
    "parcel-bundler": "1.12.4",
    "prettier": "2.0.3",
    "rimraf": "3.0.2",
    "ts-loader": "6.2.2",
    "typescript": "3.8.3"
  },
  "dependencies": {
    "coc.nvim": "0.0.77",
    "metals-languageclient": "0.1.23",
    "promisify-child-process": "3.1.4",
    "vscode-languageserver-protocol": "3.15.3"
  }
}
